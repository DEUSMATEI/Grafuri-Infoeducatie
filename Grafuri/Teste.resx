<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_exit.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer_gengraf.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>